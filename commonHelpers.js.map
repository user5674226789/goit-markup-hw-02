{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - options.defaultDate;\n\n    if (timeInterval < 0) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n    } else {\n      startBtn.disabled = false;\n      inputTime.disabled = true;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst calendar = flatpickr('#datetime-picker', options);\nconst inputTime = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst timeValueElements = document.querySelectorAll('.value');\n\n\nconsole.log(timeValueElements);\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    inputTime.disabled = true;\n\n    if (timeInterval < 0) {\n      startBtn.disabled = true;\n      inputTime.disabled = false;\n      clearInterval(repeatTime);\n      return;\n    }\n\n    const timer = convertMs(timeInterval);\n\n    timeValueElements[0].textContent = timer.days.toString().padStart(2, '0');\n    timeValueElements[1].textContent = timer.hours.toString().padStart(2, '0');\n    timeValueElements[2].textContent = timer.minutes.toString().padStart(2, '0');\n    timeValueElements[3].textContent = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["userSelectedDate","timeInterval","options","selectedDates","iziToast","startBtn","inputTime","convertMs","ms","days","hours","minutes","seconds","flatpickr","timeValueElements","event","repeatTime","timer"],"mappings":"iyBAMA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmBE,EAAQ,YAEtCD,EAAe,EACjBG,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,GAEDC,EAAS,SAAW,GACpBC,EAAU,SAAW,GAExB,CACH,EAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEiBC,EAAU,mBAAoBX,CAAO,EACtD,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EACrDD,EAAW,SAAS,cAAc,cAAc,EAChDS,EAAoB,SAAS,iBAAiB,QAAQ,EAG5D,QAAQ,IAAIA,CAAiB,EAE7BT,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASU,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CAInC,GAHAf,EAAeD,EAAmB,IAAI,KACtCM,EAAU,SAAW,GAEjBL,EAAe,EAAG,CACpBI,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,cAAcU,CAAU,EACxB,MACD,CAED,MAAMC,EAAQV,EAAUN,CAAY,EAEpCa,EAAkB,CAAC,EAAE,YAAcG,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACxEH,EAAkB,CAAC,EAAE,YAAcG,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACzEH,EAAkB,CAAC,EAAE,YAAcG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3EH,EAAkB,CAAC,EAAE,YAAcG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC5E,EAAE,GAAI,CACT,CAAC"}